#!/usr/bin/env python3

import fitter
import fitter.visualize as viz

import sys
import pathlib
import argparse


if __name__ == '__main__':

    parser = argparse.ArgumentParser(description='Print the summary of a run')

    parser.add_argument('file', help='Run output hdf file(s)', nargs='+')

    parser.add_argument('--plot', action='store_true',
                        help='Show the summary plot as well')

    parser.add_argument('-m', '--metadata', action='store_true',
                        help='Only print run metadata')

    parser.add_argument('-i', '--burn', nargs='?', default=None, type=int,
                        help='number of iterations to remove as burn-in first')

    args = parser.parse_args()

    # TODO change this to a glob pattern, and run summary on each file
    if len(args.file) == 1:
        file_list = pathlib.Path().glob(args.file[0])
    else:
        file_list = (pathlib.Path(fn) for fn in args.file)

    for file in file_list:

        if not file.is_file():
            parser.error(f'Invalid run input file {file}')

        # For now lets just hope this is always true (it should be)
        cluster = file.name.rsplit('_', 1)[0]

        obs = fitter.Observations(cluster)

        rv = viz.RunVisualizer(file, obs)

        rv.iterations = slice(args.burn, None)

        rv.print_summary(content=('all' if not args.metadata else 'metadata'))
        sys.stdout.write('\n')

        if args.plot:
            rv.plot_summary().show()
